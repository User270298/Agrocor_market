from aiogram import F, types, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove, Contact
from aiogram.filters import Command, StateFilter
from keyboards import keyboard_start, keyboard_main_menu, back_keyboard
from crud import add_user, get_users_telegram_ids

router = Router()


class AddUser(StatesGroup):
    phone = State()
    name = State()


def main_menu(count_users):
    text = f'''–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é *AGROCOR Market* üåæ
*–ó–∞—è–≤–æ–∫ –≤ –±–æ—Ç–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*
‚úÖ –Ω–∞ –ø–æ–∫—É–ø–∫—É-1
‚úÖ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É-1

*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*
‚û°Ô∏è –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ-{count_users}
‚û°Ô∏è –í—ã—Å—Ç–∞–≤–ª—è—é—Ç –∑–∞—è–≤–∫–∏-1
‚û°Ô∏è –ù–∞–±–ª—é–¥–∞—é—Ç –∑–∞ —Ü–µ–Ω–æ–π-1'''
    return text


@router.message(Command(commands=['start']))
async def start(message: Message, state: FSMContext):
    telegram_id = message.from_user.id
    telegram_ids = await get_users_telegram_ids()
    count_users = len(telegram_ids)
    if telegram_id in telegram_ids:
        await message.answer(main_menu(count_users), parse_mode='Markdown',
                             reply_markup=keyboard_main_menu())
    else:
        await message.answer(f'''
{main_menu(count_users)}

–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, *–≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏*: 
–†–∞–∑–º–µ—â–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É –∏–ª–∏ –ø—Ä–æ–¥–∞–∂—É, –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–æ—Å—å–±–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø—Ä–æ–π—Ç–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω–∞–∂–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –Ω–∏–∂–µ Ô∏è Ô∏è 

–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞:
‚òéÔ∏è +79056440180
–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: —Å 10:00 –¥–æ 18:00

–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ 
"–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω"üëá''', parse_mode="Markdown", reply_markup=keyboard_start())
        await state.set_state(AddUser.phone)


@router.message(AddUser.phone)
async def handle_phone(message: Message, state: FSMContext):
    if message.contact:
        phone_number = message.contact.phone_number  # –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ Contact
    else:
        phone_number = message.text

    await state.update_data(phone=phone_number)
    await message.answer('–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ(–§–ò–û):',
                         reply_markup=ReplyKeyboardRemove())
    await state.set_state(AddUser.name)


@router.message(AddUser.name)
async def handle_name(message: Message, state: FSMContext):
    user_name = message.text
    await state.update_data(name=user_name)

    telegram_id = message.from_user.id
    user_data = await state.get_data()
    telegram_ids = await get_users_telegram_ids()
    count_users = len(telegram_ids)

    await add_user(user_data['phone'], user_data['name'], telegram_id)
    await message.answer(f"–°–ø–∞—Å–∏–±–æ, {user_name}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
    await message.answer(main_menu(count_users), parse_mode='Markdown', reply_markup=keyboard_main_menu())
    await state.clear()


# analytics, prices, buy, subscription, instruction, urls

@router.callback_query(F.data == 'instruction')
async def handle_instruction(callback_query: CallbackQuery):
    await callback_query.message.answer('''
–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞:

‚òéÔ∏è +79056440180

*–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:* —Å 10:00 –¥–æ 18:00''', parse_mode='Markdown', reply_markup=back_keyboard())


@router.callback_query(F.data == 'urls')
async def handle_urls(callback_query: CallbackQuery):
    await callback_query.message.answer('''
üîó **–°—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏**:

üì∞ **–ù–æ–≤–æ—Å—Ç–∏**  
[–ü–µ—Ä–µ–π—Ç–∏ –≤ Agrocor News](https://t.me/agrocornews_channel)

ü§ñ **–ë–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç**  
[–ü–µ—Ä–µ–π—Ç–∏ Agrocor Assistant Bot](https://t.me/agrocorassistant_bot)

üö¢ **Vessel Catcher**  
[–ü–µ—Ä–µ–π—Ç–∏ –≤ Vessel Catcher](https://t.me/+AqsaM2xqhS44NDQy)

üì¨ **–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è**  
[–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è Agrocor](https://t.me/+Qo-k-cCWpb9hMGIy)

üìù **–ó–∞–ø—Ä–æ—Å—ã**  
[–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø—Ä–æ—Å–∞–º Agrocor](https://t.me/+xFOPd8ApOjVmNmFi)
    ''', parse_mode="Markdown", disable_web_page_preview=True, reply_markup=back_keyboard())


@router.callback_query(F.data == 'main_menu')
async def main_menu_panel(callback_query: CallbackQuery):
    telegram_ids = await get_users_telegram_ids()
    count_users = len(telegram_ids)
    await callback_query.message.answer(main_menu(count_users), parse_mode="Markdown",
                                        reply_markup=keyboard_main_menu())

@router.callback_query(F.data == 'analytics')
async def analytics(callback_query: CallbackQuery):
    await callback_query.message.answer('''
üìä–†–∞–∑–¥–µ–ª "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"

–í—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ —Å –≤—ã–≤–æ–¥–∞–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤:

üëâ[–ü–ï–†–ï–ô–¢–ò –ö –ê–ù–ê–õ–ò–¢–ò–ö–ï...](https://t.me/agrocornews_channel)
–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ–±–∑–æ—Ä: —Ä—ã–Ω–æ–∫ –∑–µ—Ä–Ω–æ–≤—ã—Ö –∏ –º–∞—Å–ª–∏—á–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä –≤ –†–æ—Å—Å–∏–∏ –∏ –º–∏—Ä–µüåè
''', parse_mode="Markdown", reply_markup=back_keyboard(), disable_web_page_preview=True)